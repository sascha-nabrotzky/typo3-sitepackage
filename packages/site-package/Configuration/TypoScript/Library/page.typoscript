page = PAGE
page {
   typeNum = 0
   meta {
      viewport = width=device-width, initial-scale=1
   }

   # Text von Typo3 ausblenden, gab aber Probleme
   config {
      /* disableAllHeaderCode = 1 */
   }

   includeCSS {
      styles = EXT:site-package/Resources/Public/Scss/Styles.css
   }

   bodyTagCObject = COA
   bodyTagCObject {
      10 = TEXT
      10.value = <body id="page-{TSFE:page|uid}" class="
      10.stdWrap.insertData = 1

      20 < lib.templateName
      20.stdWrap.wrap = be-layout-

      30 = TEXT
      30.stdWrap {
         data = siteLanguage:twoLetterIsoCode
         noTrimWrap = | language-||
      }

      100 = TEXT
      100.value = ">
   }

   10 = FLUIDTEMPLATE
   10 {
      #  <f:translate key="…" /> kommt ohne extensionName="…" aus
      extbase.controllerExtensionName = site-package

      # Liest Wert im pagelayout-Feld im BE aus und nimmt dann diesen Namen,
      # Wert wird für Fluid-Template-Name genommen
      templateName = TEXT
      templateName {
         stdWrap {
            data = pagelayout
            split {
               token = pagets__
               current = 1
            }
         }
      }

      # Pfade für Fluid-Templates
      layoutRootPaths {
         10 = EXT:site-package/Resources/Private/Layouts/Page/
      }

      templateRootPaths {
         10 = EXT:site-package/Resources/Private/Templates/Page/
      }

      partialRootPaths {
         10 = EXT:site-package/Resources/Private/Partials/Page/
      }

      # Prozessoren
      dataProcessing {
         10 = TYPO3\CMS\Frontend\DataProcessing\FilesProcessor
         10 {
            references.fieldName = media
         }

         # Menü aus dem Core, also ohne Zugriff auf Directory 
         20 = TYPO3\CMS\Frontend\DataProcessing\MenuProcessor
         20 {
            as = menuMain
         }

         # MenuProzessor greift auf Seiten-"Ordner" mit pid aus Constants
         30 = TYPO3\CMS\Frontend\DataProcessing\MenuProcessor
         30 {
            as = menuFooter
            special = directory
            special.value = {$themes.configuration.menu.footer.containerPid}
            entryLevel = 0
            includeNotInMenu = 0
         }
      }

      settings {
         footer {
            developer-text = {$developer-text}
         }
      }
   }
}

# The CONTENT object executes a database query and loads the content.
main = CONTENT
main.table = tt_content
main.select {

   # "sorting" is a column from the tt_content table and
   # keeps track of the sorting order, which was specified in
   # the backend.
   orderBy = sorting

   # Only select content from column "0" (the column called
   # "normal") and quote the database identifier (column name)
   # "colPos" (indicated by wrapping with {#})
   where = {#colPos}=1
}

# For every result line from the database query (that means for every content
# element) the renderObj is executed and the internal data array is filled
# with the content. This ensures that we can call the .field property and we
# get the according value.
main.renderObj = COA
main.renderObj {

   10 = TEXT
   # The field tt_content.header normally holds the headline.
   10.stdWrap.field = header
   10.stdWrap.wrap = <h1>|</h1>

   20 = TEXT
   20.stdWrap.field = subheader
   20.stdWrap.wrap = <h2>|</h2>

   30 = TEXT
   # The field tt_content.bodytext holds the content text.
   30.stdWrap.field = bodytext
   30.stdWrap.wrap = <p>|</p>
}

feature < main
feature {
   select.where = {#colPos}=0
}

extended < feature
extended {
   select.where = {#colPos}=2
}